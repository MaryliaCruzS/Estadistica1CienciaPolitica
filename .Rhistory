library(ggplot2)
ggplot(ic_grupo, aes(x= P319, y =Media)) +
geom_errorbar(aes(ymin=min, ymax=max), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Preferencia de distrito") + ylab("Ingreso liquido en soles")+
ylim(1400, 1700)
library(ggplot2)
ggplot(ic_grupo, aes(x= P07, y =Media)) +
geom_errorbar(aes(ymin=linf, ymax=max), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Tipo de colegio") + ylab("Ingreso liquido en soles")+
ylim(1000, 2000)
library(ggplot2)
ggplot(ic_grupo, aes(x= P07, y =Media)) +
geom_errorbar(aes(ymin=linf, ymax=lsup), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Tipo de colegio") + ylab("Ingreso liquido en soles")+
ylim(1000, 2000)
data1$P07=as.factor(data1$P07)
data1$P07=factor(data1$P07,
levels = levels(data1$P07),
labels = c("Público","Privado"),
ordered = F)
library(lsr)
ic_grupo=data1%>%
dplyr::group_by(P07) %>%
dplyr::summarise(Media = mean(sueldoliquido, na.rm=T),
linf = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[1],
lsup = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[2]
)
ic_grupo
library(ggplot2)
ggplot(ic_grupo, aes(x= P07, y =Media)) +
geom_errorbar(aes(ymin=linf, ymax=lsup), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Tipo de colegio") + ylab("Ingreso liquido en soles")+
ylim(1000, 2000)
table(data1$P319)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | apoyo == "Otro distrito") %>%
group_by(P07) %>%
count(Preferencia = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(Preferencia = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(P319 = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2 = data1 |>
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") |>
group_by(P07) |>
count(P319 = P319, name="N")|>
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2 = data1 |>
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") |>
group_by(P07) |>
count(P319r = P319, name="N")|>
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
table(data1$P319)
library(dplyr)
tabla2 = data1 |>
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") |>
group_by(P07) |>
count(P319r = P319, name="N")|>
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
library(dplyr)
tabla2 = data1 |>
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") |>
group_by(P07) |>
count(P319r = P319, name="N")|>
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
table(data1$P07)
library(dplyr)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(P319r = P319, name="N")%>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
library(dplyr)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(P319r = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
library(dplyr)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(P319r = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
library(dplyr)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(P319r = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
library(dplyr)
tabla2 = data1 %>%
dplyr::filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
dplyr::group_by(P07) %>%
dplyr::count(P319r=P319, name="N") %>%
dplyr::mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2
tabla2 = tabla2[-c(2,4),]
graf2 = ggplot(tabla2, aes(x=sexo, y=Por))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(0, 60)
graf2
graf2 = ggplot(tabla2, aes(x=sexo, y=Por))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(0, 100)
graf2
tabla2 = tabla2[-c(2,4),]
tabla2
library(dplyr)
tabla2 = data1 %>%
dplyr::filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
dplyr::group_by(P07) %>%
dplyr::count(P319r=P319, name="N") %>%
dplyr::mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2
tabla2 = tabla2[-c(2,4),]
tabla2
tabla2_1 = tabla2[-c(2,4),]
graf2 = ggplot(tabla2_1, aes(x=P07, y=P319r))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(0, 100)
graf2
tabla2_1$Por=as.numeric(tabla2_1$Por)
tabla2_1
tabla2_1
tabla2_1 = tabla2[-c(2,4),]
tabla2_1
library(dplyr)
tabla2 = data1 %>%
dplyr::filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
dplyr::group_by(P07) %>%
dplyr::count(P319r=P319, name="N") %>%
dplyr::mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2
tabla2_1 = tabla2[-c(2,4),]
tabla2_1
graf2 = ggplot(tabla2_1, aes(x=P07, y=P319r))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(0, 100)
graf2
graf2 = ggplot(tabla2_1, aes(x=P07, y=P319r))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(50, 100)
graf2
tabla2_1$P07 <- factor(tabla2_1$P07)
tabla2_1
graf2 = ggplot(tabla2_1, aes(x=P07, y=P319r))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(50, 100)
graf2
graf2 = ggplot(tabla2_1, aes(x=P07, y=Por))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(50, 100)
graf2
graf2 = ggplot(tabla2_1, aes(x=P07, y=Por))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(50, 100)
graf2
datos <- data.frame(año = rep(2010:2019, each = 20),
sexo = sample(c("mujer", "hombre"), size = 200, replace = TRUE))
# Calcular la tabla de contingencia
tabla_contingencia <- table(datos$año, datos$sexo)
# Calcular el porcentaje por año
porcentaje <- prop.table(tabla_contingencia, margin = 1) * 100
# Mostrar los resultados
print(porcentaje)
quarto::quarto_render()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
rmarkdown::render_site()
# Cargar librerías necesarias
library(knitr)
library(kableExtra)
# Crear la tabla con los temas de cada semana
tabla_curso <- data.frame(
Semana = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14),
Fechas = c("24/03 – 29/03", "31/03 – 5/04", "07/04 – 12/04", "14/04 – 19/04",
"21/04 – 26/04", "28/04 – 03/05", "5/05 – 10/05", "12/05 – 17/05",
"19/05 – 24/05", "26/05 – 31/05", "02/06 – 7/06", "9/06 – 14/06",
"16/06 – 21/06", "23/06 – 28/06"),
Tema = c("Presentación del curso. Niveles de medición y variables. Organización de una base de datos.",
"Estadística descriptiva. Medidas de centralidad: media, mediana y moda. Distribución y visualización de datos.",
"Medidas de dispersión: varianza y desviación estándar. Tablas resumen. Gráficos con ggplot2.",
"Intervalos de confianza de una media. Intervalos de confianza de una proporción. Visualización de comparación de medias e intervalos de confianza con ggplot.",
"Estadística bivariada. Pruebas de significancia. Comparación entre grupos. P-values. Prueba T.",
"Tablas de contingencia y chi-cuadrado. Gráficos de barras con ggplot.",
"Tablas de contingencia y chi-cuadrado. Gráficos de barras con ggplot.",
"Repaso Pre parcial.",
"Parcial.",
"Asociación y correlación. Variables dependientes e independientes. Diagramas de dispersión. Coeficiente de correlación de Pearson y R².",
"Regresión simple. Método de mínimos cuadrados. Ecuación de la recta.",
"Introducción a la regresión múltiple.",
"Regresión múltiple II. Variables de control.",
"Regresión múltiple III."),
stringsAsFactors = FALSE
)
kable(tabla_curso, format = "html", align = "c") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = FALSE)
library(ggplot2)
library(dplyr)
# Datos simulados (en USD, salario promedio mensual)
brecha_df <- data.frame(
pais = rep(c("Argentina", "Brasil", "Chile", "Perú", "Colombia", "Uruguay"), each = 2),
genero = rep(c("Hombre", "Mujer"), times = 6),
salario = c(750, 630, 700, 590, 720, 640, 680, 550, 710, 600, 730, 670)
)
# Calcular la brecha salarial relativa (% de diferencia)
brechas <- brecha_df %>%
pivot_wider(names_from = genero, values_from = salario) %>%
mutate(brecha_relativa = 100 * (Hombre - Mujer) / Hombre)
library(tidyr)
# Calcular la brecha salarial relativa (% de diferencia)
brechas <- brecha_df %>%
pivot_wider(names_from = genero, values_from = salario) %>%
mutate(brecha_relativa = 100 * (Hombre - Mujer) / Hombre)
# Gráfico de barras por país y género
ggplot(brecha_df, aes(x = pais, y = salario, fill = genero)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Salario promedio mensual por género (USD)",
subtitle = "Datos simulados para América del Sur",
x = "País",
y = "Salario (USD)",
fill = "Género") +
theme_minimal()
# Gráfico de barras por país y género
ggplot(brecha_df, aes(x = pais, y = salario, color = genero, group = genero)) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
geom_errorbar(aes(ymin = salario - sd, ymax = salario + sd),
position = position_dodge(width = 0.5),
width = 0.2) +
labs(title = "Salario promedio mensual por género con desviación estándar",
subtitle = "Datos simulados para América del Sur",
x = "País",
y = "Salario (USD)",
color = "Género") +
theme_minimal()
# Datos simulados: salario promedio y desviación estándar por país y género
brecha_df <- data.frame(
pais = rep(c("Argentina", "Brasil", "Chile", "Perú", "Colombia", "Uruguay"), each = 2),
genero = rep(c("Hombre", "Mujer"), times = 6),
salario = c(750, 630, 700, 590, 720, 640, 680, 550, 710, 600, 730, 670),
sd = c(40, 35, 30, 28, 32, 30, 25, 22, 29, 27, 33, 30)
)
# Gráfico de barras por país y género
ggplot(brecha_df, aes(x = pais, y = salario, color = genero, group = genero)) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
geom_errorbar(aes(ymin = salario - sd, ymax = salario + sd),
position = position_dodge(width = 0.5),
width = 0.2) +
labs(title = "Salario promedio mensual por género con desviación estándar",
subtitle = "Datos simulados para América del Sur",
x = "País",
y = "Salario (USD)",
color = "Género") +
theme_minimal()
ggplot(brecha_df, aes(x = pais, y = salario, color = genero, group = genero)) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
geom_errorbar(aes(ymin = salario - sd, ymax = salario + sd),
position = position_dodge(width = 0.5),
width = 0.2) +
scale_color_manual(values = c("Hombre" = "blue", "Mujer" = "red")) +
labs(title = "Salario promedio mensual por género con barras de error",
subtitle = "Datos simulados para América del Sur",
x = "País",
y = "Salario (USD)",
color = "Género") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Salario promedio de referencia para hombres (supuesto)
salario_hombre <- c(
Perú = 1000,
Ecuador = 950,
Uruguay = 1100,
Bolivia = 900,
Paraguay = 850,
LAC = 980 # Latinoamérica y el Caribe
)
# Brechas salariales en porcentaje (fuentes reales)
brechas <- c(
Perú = 27.8,
Ecuador = 18.8,
Uruguay = 15.0,
Bolivia = 38.0,
Paraguay = 6.8,
LAC = 19.8
)
# Estimar salario mujer y error estándar ficticio
datos_brecha <- data.frame(
pais = names(salario_hombre),
hombre = salario_hombre,
brecha_pct = brechas,
mujer = salario_hombre * (1 - brechas / 100),
sd = salario_hombre * 0.05 # asumimos 5% de desviación estándar para ambos géneros
)
# Reorganizar para gráfico largo
datos_largos <- datos_brecha %>%
select(pais, hombre, mujer, sd) %>%
tidyr::pivot_longer(cols = c("hombre", "mujer"), names_to = "genero", values_to = "salario")
# Asignar error estándar igual para ambos
datos_largos <- datos_largos %>%
mutate(error = sd)
# Gráfico
ggplot(datos_largos, aes(x = pais, y = salario, color = genero, group = genero)) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
geom_errorbar(aes(ymin = salario - error, ymax = salario + error),
width = 0.2, position = position_dodge(width = 0.5)) +
scale_color_manual(values = c("hombre" = "blue", "mujer" = "red"),
labels = c("Hombre", "Mujer")) +
labs(title = "Salario estimado por género en América del Sur (2024)",
subtitle = "Basado en brechas salariales reales y salarios promedio simulados",
x = "País",
y = "Salario mensual estimado (USD)",
color = "Género") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Salario promedio de referencia para hombres (supuesto)
salario_hombre <- c(
Perú = 1000,
Ecuador = 950,
Uruguay = 1100,
Bolivia = 900,
Paraguay = 850
)
# Brechas salariales en porcentaje (fuentes reales)
brechas <- c(
Perú = 27.8,
Ecuador = 18.8,
Uruguay = 15.0,
Bolivia = 38.0,
Paraguay = 6.8
)
# Estimar salario mujer y error estándar ficticio
datos_brecha <- data.frame(
pais = names(salario_hombre),
hombre = salario_hombre,
brecha_pct = brechas,
mujer = salario_hombre * (1 - brechas / 100),
sd = salario_hombre * 0.05 # asumimos 5% de desviación estándar para ambos géneros
)
# Reorganizar para gráfico largo
datos_largos <- datos_brecha %>%
select(pais, hombre, mujer, sd) %>%
tidyr::pivot_longer(cols = c("hombre", "mujer"), names_to = "genero", values_to = "salario")
# Asignar error estándar igual para ambos
datos_largos <- datos_largos %>%
mutate(error = sd)
# Gráfico
ggplot(datos_largos, aes(x = pais, y = salario, color = genero, group = genero)) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
geom_errorbar(aes(ymin = salario - error, ymax = salario + error),
width = 0.2, position = position_dodge(width = 0.5)) +
scale_color_manual(values = c("hombre" = "blue", "mujer" = "red"),
labels = c("Hombre", "Mujer")) +
labs(title = "Salario estimado por género en América del Sur (2024)",
subtitle = "Basado en brechas salariales reales y salarios promedio simulados",
x = "País",
y = "Salario mensual estimado (USD)",
color = "Género") +
theme_minimal()
# Gráfico
ggplot(datos_largos, aes(x = pais, y = salario, color = genero, group = genero)) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
geom_errorbar(aes(ymin = salario - error, ymax = salario + error),
width = 0.2, position = position_dodge(width = 0.5)) +
scale_color_manual(values = c("hombre" = "blue", "mujer" = "red"),
labels = c("Hombre", "Mujer")) +
labs(title = "Salario estimado por género en algunos países de América del Sur (2024)",
subtitle = " ",
x = "País",
y = "Salario mensual estimado (USD)",
color = "Género") +
theme_minimal()
# Gráfico
ggplot(datos_largos, aes(x = pais, y = salario, color = genero, group = genero)) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
geom_errorbar(aes(ymin = salario - error, ymax = salario + error),
width = 0.2, position = position_dodge(width = 0.5)) +
scale_color_manual(values = c("hombre" = "blue", "mujer" = "red"),
labels = c("Hombre", "Mujer")) +
labs(title = "Salario estimado por género  (2024)",
subtitle = " ",
x = "País",
y = "Salario mensual estimado (USD)",
color = "Género") +
theme_minimal()
# Gráfico
ggplot(datos_largos, aes(x = pais, y = salario, color = genero, group = genero)) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
geom_errorbar(aes(ymin = salario - error, ymax = salario + error),
width = 0.2, position = position_dodge(width = 0.5)) +
scale_color_manual(values = c("hombre" = "blue", "mujer" = "red"),
labels = c("Hombre", "Mujer")) +
labs(title = "Salario estimado por sexo  (2024)",
subtitle = " ",
x = "País",
y = "Salario mensual estimado (USD)",
color = "Sexo") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
library(rio)
data=import("2025-Gasto-COVID-19.csv")
setwd("/Users/maryliacruz/Downloads")
library(rio)
data=import("2025-Gasto-COVID-19.csv")
names(data)
table(data$NIVEL_GOBIERNO_NOMBRE)
table(data$FUENTE_FINANCIAMIENTO_NOMBRE)
rmardown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
setwd("/Volumes/Macintosh HD - Datos/12 PUCP-Docencia/2025/Estadística 1/Estadistica1CienciaPolitica")
rmarkdown::render_site()
