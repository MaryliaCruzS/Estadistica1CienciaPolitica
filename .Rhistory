setwd("/Volumes/Macintosh HD - Datos/34 Consultorias/3. IDEA Congreso")
library(openxlsx)
RCongreso11=read.xlsx("EG2011_Resultados_Presidencial.xlsx",
sheet = 1,
startRow = 1,
skipEmptyRows = T, skipEmptyCols = T)
#Eliminar los votos blancos y nulos de la base de datos.
RCongreso11=RCongreso11[!is.na(RCongreso11["Tipo.Organización.Política"]),]
RCongreso11_Nacional=subset(RCongreso11,Distrito.electoral=="NACION")
resultados_long <- RCongreso11_Nacional[, c("Organización.Política", "Votos")]
colnames(resultados_long) <- c("Partido", "Votos")
# Asignar escaños utilizando el método de D'Hondt
num_escaños <- 27
escaños_asignados <- asignar_escaños_dhondt(resultados_long, num_escaños)
# Imprimir los resultados
print(escaños_asignados)
Escenario1_DistritoUnico_11 <- as.data.frame(escaños_asignados)
#Quitar el valor de nacional y extranjero PARA CALCULO DE DISTRITOS MULTIPLES
RCongreso11=RCongreso11[RCongreso11$Distrito.electoral!="NACION"&RCongreso11$Distrito.electoral!="EXTRANJERO",]
# Se colocan 2 maximos para cada departamento
library(dplyr)
Escenario1_Top2_11 <- RCongreso11 %>%
group_by(Distrito.electoral) %>%
top_n(2, `%.Votos`)
Escenario1_Top2_11=as.data.frame(table(Escenario1_Top2_11$Organización.Política))
colnames(Escenario1_Top2_11) <- c("Partido", "Escaños")
Escenario1_2011=rbind(Escenario1_Top2_11,Escenario1_DistritoUnico_11)
Escenario1_2011 <- Escenario1_2011 %>%
group_by(Partido) %>%
summarize(Escaños = sum(Escaños))
Escenario1_2011
Escenario1_Top2_11
Escenario1_DistritoUnico_11
Escenario1_Top2_11
# Función para asignar escaños utilizando el método de D'Hondt
asignar_escaños_dhondt <- function(resultados_long, num_escaños) {
# Calcular los cocientes para cada partido
cocientes <- resultados_long$Votos / seq_len(nrow(resultados_long))
# Inicializar el vector de escaños asignados a cada partido
escaños_asignados <- rep(0, nrow(resultados_long))
# Repartir los escaños entre los partidos
for (i in 1:num_escaños) {
# Encontrar el partido con el cociente más alto
partido_ganador <- which.max(cocientes)
# Incrementar el número de escaños asignados al partido ganador
escaños_asignados[partido_ganador] <- escaños_asignados[partido_ganador] + 1
# Recalcular los cocientes para el siguiente reparto
cocientes <- resultados_long$Votos / (escaños_asignados + 1)
}
# Crear el marco de datos con los resultados
resultados_finales <- data.frame(Partido = resultados_long$Partido, Escaños = escaños_asignados)
return(resultados_finales)
}
# Resultados de votos por partido político en un único distrito electoral
resultados_long <- data.frame(
Partido = c("Partido_A", "Partido_B", "Partido_C", "Partido_D", "Partido_E"),
Votos = c(400, 320, 150, 80, 50)
)
# Asignar escaños utilizando el método de D'Hondt
num_escaños <- 5
escaños_asignados <- asignar_escaños_dhondt(resultados_long, num_escaños)
# Imprimir los resultados
#print(escaños_asignados)
setwd("/Volumes/Macintosh HD - Datos/34 Consultorias/3. IDEA Congreso")
library(openxlsx)
RCongreso11=read.xlsx("EG2011_Resultados_Presidencial.xlsx",
sheet = 1,
startRow = 1,
skipEmptyRows = T, skipEmptyCols = T)
#Eliminar los votos blancos y nulos de la base de datos.
RCongreso11=RCongreso11[!is.na(RCongreso11["Tipo.Organización.Política"]),]
RCongreso11_Nacional=subset(RCongreso11,Distrito.electoral=="NACION")
resultados_long <- RCongreso11_Nacional[, c("Organización.Política", "Votos")]
colnames(resultados_long) <- c("Partido", "Votos")
# Asignar escaños utilizando el método de D'Hondt
num_escaños <- 27
escaños_asignados <- asignar_escaños_dhondt(resultados_long, num_escaños)
# Imprimir los resultados
print(escaños_asignados)
Escenario1_DistritoUnico_11 <- as.data.frame(escaños_asignados)
#Quitar el valor de nacional y extranjero PARA CALCULO DE DISTRITOS MULTIPLES
RCongreso11=RCongreso11[RCongreso11$Distrito.electoral!="NACION"&RCongreso11$Distrito.electoral!="EXTRANJERO",]
# Se colocan 2 maximos para cada departamento
library(dplyr)
Escenario1_Top2_11 <- RCongreso11 %>%
group_by(Distrito.electoral) %>%
top_n(2, `%.Votos`)
Escenario1_Top2_11=as.data.frame(table(Escenario1_Top2_11$Organización.Política))
colnames(Escenario1_Top2_11) <- c("Partido", "Escaños")
Escenario1_2011=rbind(Escenario1_Top2_11,Escenario1_DistritoUnico_11)
Escenario1_2011 <- Escenario1_2011 %>%
group_by(Partido) %>%
summarize(Escaños = sum(Escaños))
Escenario1_2011
Escenario1_DistritoUnico_11
library(openxlsx)
RCongreso21=read.xlsx("EG2021_V1.1_Resultados_Presidencial.xlsx",
sheet = 1,
startRow = 1,
skipEmptyRows = T, skipEmptyCols = T)
RCongreso21=RCongreso21[!is.na(RCongreso21["Tipo.Organización.Política"]),]
RCongreso21_Nacional=subset(RCongreso21,Distrito.electoral=="NACION")
resultados_long <- RCongreso21_Nacional[, c("Organización.Política", "Votos")]
colnames(resultados_long) <- c("Partido", "Votos")
# Asignar escaños utilizando el método de D'Hondt
num_escaños <- 6
escaños_asignados <- asignar_escaños_dhondt(resultados_long, num_escaños)
# Imprimir los resultados
print(escaños_asignados)
Escenario1_DistritoUnico_21 <- as.data.frame(escaños_asignados)
RCongreso21=RCongreso21[RCongreso21$Distrito.electoral!="NACION",]
library(openxlsx)
RCongreso21=read.xlsx("EG2021_V1.1_Resultados_Presidencial.xlsx",
sheet = 1,
startRow = 1,
skipEmptyRows = T, skipEmptyCols = T)
RCongreso21=RCongreso21[!is.na(RCongreso21["Tipo.Organización.Política"]),]
RCongreso21_Nacional=subset(RCongreso21,Distrito.electoral=="NACION")
resultados_long <- RCongreso21_Nacional[, c("Organización.Política", "Votos")]
colnames(resultados_long) <- c("Partido", "Votos")
# Asignar escaños utilizando el método de D'Hondt
num_escaños <- 60
escaños_asignados <- asignar_escaños_dhondt(resultados_long, num_escaños)
# Imprimir los resultados
print(escaños_asignados)
Escenario1_DistritoUnico_21 <- as.data.frame(escaños_asignados)
export(Escenario1_DistritoUnico_21,"Escenario1_DistritoUnico_21.xlsx")
library(rio)
export(Escenario1_DistritoUnico_21,"Escenario1_DistritoUnico_21.xlsx")
library(openxlsx)
RCongreso21=read.xlsx("EG2021_V1.1_Resultados_Presidencial.xlsx",
sheet = 1,
startRow = 1,
skipEmptyRows = T, skipEmptyCols = T)
RCongreso21=RCongreso21[!is.na(RCongreso21["Tipo.Organización.Política"]),]
RCongreso21_Nacional=subset(RCongreso21,Distrito.electoral=="NACION")
resultados_long <- RCongreso21_Nacional[, c("Organización.Política", "Votos")]
colnames(resultados_long) <- c("Partido", "Votos")
# Asignar escaños utilizando el método de D'Hondt
num_escaños <- 56
escaños_asignados <- asignar_escaños_dhondt(resultados_long, num_escaños)
# Imprimir los resultados
print(escaños_asignados)
Escenario1_DistritoUnico_21 <- as.data.frame(escaños_asignados)
setwd("/Volumes/Macintosh HD - Datos/12 PUCP-Docencia/2023/POL278")
library(rio)
data=import("Base ENDO 2018.sav")
head(names(data))
library(dplyr)
data1=data%>%
rename("sueldoliquido"=P501_B)%>%
mutate(sueldoliquido=na_if(sueldoliquido, 1))
summary(data1$sueldoliquido)
library(Rmisc)
intervalomedia=CI(data1$sueldoliquido,ci=0.95)
intervalomedia
intervalomedia=CI(na.omit(data1$sueldoliquido,ci=0.95))
intervalomedia
library(lsr)
tabla=data1%>%summarise(Media = mean(sueldoliquido, na.rm=T),
min = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[1],
max = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[2]
)
tabla
data1$P319=as.factor(data1$P319)
data1$P319=factor(data1$P319,
levels = levels(data1$P319),
labels = c("Mismo distrito","Otro distrito"),
ordered = F)
prop.table(table(data1$P319))
x = 9512 #almacenamos en "x" la frecuencia de nuestro caso de éxito
n = 9512 + 5575 #almacenamos en "n" el total de casos
ic_prop = prop.test(x,n,conf.level = 0.95)
ic_prop #llamamos a ic_prop para visualizar los resultados
library(lsr)
ic_grupo=data1%>%
group_by(P319) %>%
summarise(Media = mean(sueldoliquido, na.rm=T),
min = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[1],
max = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[2]
)
ic_grupo
library(ggplot2)
ggplot(ic_grupo, aes(x= P319, y =Media)) +
geom_errorbar(aes(ymin=min, ymax=max), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Preferencia de distrito") + ylab("Ingreso liquido en soles")+
ylim(1400, 1700)
library(lsr)
ic_grupo=data1%>%
dplyr::group_by(P319) %>%
dplyr::summarise(Media = mean(sueldoliquido, na.rm=T),
min = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[1],
max = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[2]
)
ic_grupo
library(ggplot2)
ggplot(ic_grupo, aes(x= P319, y =Media)) +
geom_errorbar(aes(ymin=min, ymax=max), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Preferencia de distrito") + ylab("Ingreso liquido en soles")+
ylim(1400, 1700)
library(ggplot2)
ggplot(ic_grupo, aes(x= P319, y =Media)) +
geom_errorbar(aes(ymin=min, ymax=max), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Preferencia de distrito") + ylab("Ingreso liquido en soles")+
ylim(1400, 1700)
library(ggplot2)
ggplot(ic_grupo, aes(x= P07, y =Media)) +
geom_errorbar(aes(ymin=linf, ymax=max), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Tipo de colegio") + ylab("Ingreso liquido en soles")+
ylim(1000, 2000)
library(ggplot2)
ggplot(ic_grupo, aes(x= P07, y =Media)) +
geom_errorbar(aes(ymin=linf, ymax=lsup), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Tipo de colegio") + ylab("Ingreso liquido en soles")+
ylim(1000, 2000)
data1$P07=as.factor(data1$P07)
data1$P07=factor(data1$P07,
levels = levels(data1$P07),
labels = c("Público","Privado"),
ordered = F)
library(lsr)
ic_grupo=data1%>%
dplyr::group_by(P07) %>%
dplyr::summarise(Media = mean(sueldoliquido, na.rm=T),
linf = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[1],
lsup = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[2]
)
ic_grupo
library(ggplot2)
ggplot(ic_grupo, aes(x= P07, y =Media)) +
geom_errorbar(aes(ymin=linf, ymax=lsup), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Tipo de colegio") + ylab("Ingreso liquido en soles")+
ylim(1000, 2000)
table(data1$P319)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | apoyo == "Otro distrito") %>%
group_by(P07) %>%
count(Preferencia = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(Preferencia = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(P319 = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2 = data1 |>
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") |>
group_by(P07) |>
count(P319 = P319, name="N")|>
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2 = data1 |>
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") |>
group_by(P07) |>
count(P319r = P319, name="N")|>
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
table(data1$P319)
library(dplyr)
tabla2 = data1 |>
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") |>
group_by(P07) |>
count(P319r = P319, name="N")|>
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
library(dplyr)
tabla2 = data1 |>
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") |>
group_by(P07) |>
count(P319r = P319, name="N")|>
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
table(data1$P07)
library(dplyr)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(P319r = P319, name="N")%>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
library(dplyr)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(P319r = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
library(dplyr)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(P319r = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
library(dplyr)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(P319r = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
library(dplyr)
tabla2 = data1 %>%
dplyr::filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
dplyr::group_by(P07) %>%
dplyr::count(P319r=P319, name="N") %>%
dplyr::mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2
tabla2 = tabla2[-c(2,4),]
graf2 = ggplot(tabla2, aes(x=sexo, y=Por))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(0, 60)
graf2
graf2 = ggplot(tabla2, aes(x=sexo, y=Por))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(0, 100)
graf2
tabla2 = tabla2[-c(2,4),]
tabla2
library(dplyr)
tabla2 = data1 %>%
dplyr::filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
dplyr::group_by(P07) %>%
dplyr::count(P319r=P319, name="N") %>%
dplyr::mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2
tabla2 = tabla2[-c(2,4),]
tabla2
tabla2_1 = tabla2[-c(2,4),]
graf2 = ggplot(tabla2_1, aes(x=P07, y=P319r))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(0, 100)
graf2
tabla2_1$Por=as.numeric(tabla2_1$Por)
tabla2_1
tabla2_1
tabla2_1 = tabla2[-c(2,4),]
tabla2_1
library(dplyr)
tabla2 = data1 %>%
dplyr::filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
dplyr::group_by(P07) %>%
dplyr::count(P319r=P319, name="N") %>%
dplyr::mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2
tabla2_1 = tabla2[-c(2,4),]
tabla2_1
graf2 = ggplot(tabla2_1, aes(x=P07, y=P319r))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(0, 100)
graf2
graf2 = ggplot(tabla2_1, aes(x=P07, y=P319r))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(50, 100)
graf2
tabla2_1$P07 <- factor(tabla2_1$P07)
tabla2_1
graf2 = ggplot(tabla2_1, aes(x=P07, y=P319r))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(50, 100)
graf2
graf2 = ggplot(tabla2_1, aes(x=P07, y=Por))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(50, 100)
graf2
graf2 = ggplot(tabla2_1, aes(x=P07, y=Por))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(50, 100)
graf2
datos <- data.frame(año = rep(2010:2019, each = 20),
sexo = sample(c("mujer", "hombre"), size = 200, replace = TRUE))
# Calcular la tabla de contingencia
tabla_contingencia <- table(datos$año, datos$sexo)
# Calcular el porcentaje por año
porcentaje <- prop.table(tabla_contingencia, margin = 1) * 100
# Mostrar los resultados
print(porcentaje)
quarto::quarto_render()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
rmarkdown::render_site()
# Cargar librerías necesarias
library(knitr)
library(kableExtra)
# Crear la tabla con los temas de cada semana
tabla_curso <- data.frame(
Semana = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14),
Fechas = c("24/03 – 29/03", "31/03 – 5/04", "07/04 – 12/04", "14/04 – 19/04",
"21/04 – 26/04", "28/04 – 03/05", "5/05 – 10/05", "12/05 – 17/05",
"19/05 – 24/05", "26/05 – 31/05", "02/06 – 7/06", "9/06 – 14/06",
"16/06 – 21/06", "23/06 – 28/06"),
Tema = c("Presentación del curso. Niveles de medición y variables. Organización de una base de datos.",
"Estadística descriptiva. Medidas de centralidad: media, mediana y moda. Distribución y visualización de datos.",
"Medidas de dispersión: varianza y desviación estándar. Tablas resumen. Gráficos con ggplot2.",
"Intervalos de confianza de una media. Intervalos de confianza de una proporción. Visualización de comparación de medias e intervalos de confianza con ggplot.",
"Estadística bivariada. Pruebas de significancia. Comparación entre grupos. P-values. Prueba T.",
"Tablas de contingencia y chi-cuadrado. Gráficos de barras con ggplot.",
"Tablas de contingencia y chi-cuadrado. Gráficos de barras con ggplot.",
"Repaso Pre parcial.",
"Parcial.",
"Asociación y correlación. Variables dependientes e independientes. Diagramas de dispersión. Coeficiente de correlación de Pearson y R².",
"Regresión simple. Método de mínimos cuadrados. Ecuación de la recta.",
"Introducción a la regresión múltiple.",
"Regresión múltiple II. Variables de control.",
"Regresión múltiple III."),
stringsAsFactors = FALSE
)
kable(tabla_curso, format = "html", align = "c") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = FALSE)
setwd("/Volumes/Macintosh HD - Datos/40 Investigaciones 2/4. Wapor2025")
data=import("WVS_TimeSeries_4_0.sav")
library(rio)
data=import("WVS_TimeSeries_4_0.sav")
names(data)
table(data$COUNTRY_ALPHA)
dataperu=subset(data,COUNTRY_ALPHA="PER")
table(dataperu$COUNTRY_ALPHA)
dataperu=subset(data,data$COUNTRY_ALPHA="PER")
dataperu=subset(data,COUNTRY_ALPHA=="PER")
table(dataperu$COUNTRY_ALPHA)
export(dataperu,"dataperu.sav")
names(dataperu)
setwd("/Volumes/Macintosh HD - Datos/12 PUCP-Docencia/2025/Estadística 1/Estadistica1CienciaPolitica")
setwd("/Volumes/Macintosh HD - Datos/12 PUCP-Docencia/2025/Estadística 1/Presentaciones")
setwd("/Volumes/Macintosh HD - Datos/12 PUCP-Docencia/2025/Estadística 1/Estadistica1CienciaPolitica")
setwd("/Volumes/Macintosh HD - Datos/12 PUCP-Docencia/2025/Estadística 1/Estadistica1CienciaPolitica")
