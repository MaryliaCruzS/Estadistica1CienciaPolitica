n = 9512 + 5575 #almacenamos en "n" el total de casos
ic_prop = prop.test(x,n,conf.level = 0.95)
ic_prop #llamamos a ic_prop para visualizar los resultados
library(lsr)
ic_grupo=data1%>%
group_by(P319) %>%
summarise(Media = mean(sueldoliquido, na.rm=T),
min = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[1],
max = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[2]
)
ic_grupo
library(ggplot2)
ggplot(ic_grupo, aes(x= P319, y =Media)) +
geom_errorbar(aes(ymin=min, ymax=max), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Preferencia de distrito") + ylab("Ingreso liquido en soles")+
ylim(1400, 1700)
library(lsr)
ic_grupo=data1%>%
dplyr::group_by(P319) %>%
dplyr::summarise(Media = mean(sueldoliquido, na.rm=T),
min = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[1],
max = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[2]
)
ic_grupo
library(ggplot2)
ggplot(ic_grupo, aes(x= P319, y =Media)) +
geom_errorbar(aes(ymin=min, ymax=max), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Preferencia de distrito") + ylab("Ingreso liquido en soles")+
ylim(1400, 1700)
library(ggplot2)
ggplot(ic_grupo, aes(x= P319, y =Media)) +
geom_errorbar(aes(ymin=min, ymax=max), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Preferencia de distrito") + ylab("Ingreso liquido en soles")+
ylim(1400, 1700)
library(ggplot2)
ggplot(ic_grupo, aes(x= P07, y =Media)) +
geom_errorbar(aes(ymin=linf, ymax=max), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Tipo de colegio") + ylab("Ingreso liquido en soles")+
ylim(1000, 2000)
library(ggplot2)
ggplot(ic_grupo, aes(x= P07, y =Media)) +
geom_errorbar(aes(ymin=linf, ymax=lsup), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Tipo de colegio") + ylab("Ingreso liquido en soles")+
ylim(1000, 2000)
data1$P07=as.factor(data1$P07)
data1$P07=factor(data1$P07,
levels = levels(data1$P07),
labels = c("Público","Privado"),
ordered = F)
library(lsr)
ic_grupo=data1%>%
dplyr::group_by(P07) %>%
dplyr::summarise(Media = mean(sueldoliquido, na.rm=T),
linf = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[1],
lsup = ciMean(sueldoliquido,conf = 0.95, na.rm=T)[2]
)
ic_grupo
library(ggplot2)
ggplot(ic_grupo, aes(x= P07, y =Media)) +
geom_errorbar(aes(ymin=linf, ymax=lsup), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Tipo de colegio") + ylab("Ingreso liquido en soles")+
ylim(1000, 2000)
table(data1$P319)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | apoyo == "Otro distrito") %>%
group_by(P07) %>%
count(Preferencia = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(Preferencia = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(P319 = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2 = data1 |>
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") |>
group_by(P07) |>
count(P319 = P319, name="N")|>
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2 = data1 |>
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") |>
group_by(P07) |>
count(P319r = P319, name="N")|>
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
table(data1$P319)
library(dplyr)
tabla2 = data1 |>
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") |>
group_by(P07) |>
count(P319r = P319, name="N")|>
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
library(dplyr)
tabla2 = data1 |>
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") |>
group_by(P07) |>
count(P319r = P319, name="N")|>
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
table(data1$P07)
library(dplyr)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(P319r = P319, name="N")%>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
library(dplyr)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(P319r = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
library(dplyr)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(P319r = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
library(dplyr)
tabla2 = data1 %>%
filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
group_by(P07) %>%
count(P319r = P319, name="N") %>%
mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
library(dplyr)
tabla2 = data1 %>%
dplyr::filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
dplyr::group_by(P07) %>%
dplyr::count(P319r=P319, name="N") %>%
dplyr::mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2
tabla2 = tabla2[-c(2,4),]
graf2 = ggplot(tabla2, aes(x=sexo, y=Por))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(0, 60)
graf2
graf2 = ggplot(tabla2, aes(x=sexo, y=Por))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(0, 100)
graf2
tabla2 = tabla2[-c(2,4),]
tabla2
library(dplyr)
tabla2 = data1 %>%
dplyr::filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
dplyr::group_by(P07) %>%
dplyr::count(P319r=P319, name="N") %>%
dplyr::mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2
tabla2 = tabla2[-c(2,4),]
tabla2
tabla2_1 = tabla2[-c(2,4),]
graf2 = ggplot(tabla2_1, aes(x=P07, y=P319r))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(0, 100)
graf2
tabla2_1$Por=as.numeric(tabla2_1$Por)
tabla2_1
tabla2_1
tabla2_1 = tabla2[-c(2,4),]
tabla2_1
library(dplyr)
tabla2 = data1 %>%
dplyr::filter(P319 =="Mismo distrito" | P319 == "Otro distrito") %>%
dplyr::group_by(P07) %>%
dplyr::count(P319r=P319, name="N") %>%
dplyr::mutate(total = sum(N),
Por = N / total * 100,
err = sqrt(Por*(100-Por)/N),
liminf = Por - 1.96*err,
limsup = Por + 1.96*err)
tabla2
tabla2_1 = tabla2[-c(2,4),]
tabla2_1
graf2 = ggplot(tabla2_1, aes(x=P07, y=P319r))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(0, 100)
graf2
graf2 = ggplot(tabla2_1, aes(x=P07, y=P319r))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(50, 100)
graf2
tabla2_1$P07 <- factor(tabla2_1$P07)
tabla2_1
graf2 = ggplot(tabla2_1, aes(x=P07, y=P319r))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(50, 100)
graf2
graf2 = ggplot(tabla2_1, aes(x=P07, y=Por))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(50, 100)
graf2
graf2 = ggplot(tabla2_1, aes(x=P07, y=Por))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=liminf, ymax=limsup), width=0.2)+
geom_text(aes(label=paste(round(Por, 1))), vjust=-1, size=4)+
xlab("Sexo del docente") + ylab("Porcentaje que recibió atención psicológica")+
ylim(50, 100)
graf2
datos <- data.frame(año = rep(2010:2019, each = 20),
sexo = sample(c("mujer", "hombre"), size = 200, replace = TRUE))
# Calcular la tabla de contingencia
tabla_contingencia <- table(datos$año, datos$sexo)
# Calcular el porcentaje por año
porcentaje <- prop.table(tabla_contingencia, margin = 1) * 100
# Mostrar los resultados
print(porcentaje)
quarto::quarto_render()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
rmarkdown::render_site()
# Cargar librerías necesarias
library(knitr)
library(kableExtra)
# Crear la tabla con los temas de cada semana
tabla_curso <- data.frame(
Semana = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14),
Fechas = c("24/03 – 29/03", "31/03 – 5/04", "07/04 – 12/04", "14/04 – 19/04",
"21/04 – 26/04", "28/04 – 03/05", "5/05 – 10/05", "12/05 – 17/05",
"19/05 – 24/05", "26/05 – 31/05", "02/06 – 7/06", "9/06 – 14/06",
"16/06 – 21/06", "23/06 – 28/06"),
Tema = c("Presentación del curso. Niveles de medición y variables. Organización de una base de datos.",
"Estadística descriptiva. Medidas de centralidad: media, mediana y moda. Distribución y visualización de datos.",
"Medidas de dispersión: varianza y desviación estándar. Tablas resumen. Gráficos con ggplot2.",
"Intervalos de confianza de una media. Intervalos de confianza de una proporción. Visualización de comparación de medias e intervalos de confianza con ggplot.",
"Estadística bivariada. Pruebas de significancia. Comparación entre grupos. P-values. Prueba T.",
"Tablas de contingencia y chi-cuadrado. Gráficos de barras con ggplot.",
"Tablas de contingencia y chi-cuadrado. Gráficos de barras con ggplot.",
"Repaso Pre parcial.",
"Parcial.",
"Asociación y correlación. Variables dependientes e independientes. Diagramas de dispersión. Coeficiente de correlación de Pearson y R².",
"Regresión simple. Método de mínimos cuadrados. Ecuación de la recta.",
"Introducción a la regresión múltiple.",
"Regresión múltiple II. Variables de control.",
"Regresión múltiple III."),
stringsAsFactors = FALSE
)
kable(tabla_curso, format = "html", align = "c") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = FALSE)
setwd("/Volumes/Macintosh HD - Datos/12 PUCP-Docencia/2025/Estadística 1/Presentaciones")
library(rio)
data=import("PER_2023_LAPOP.sav")
names(data)
table(data$prot3)
table(data$jc15a)
table(data$crg1)
names(data$crg1)="Jus_margendelaley"
names(data)
names(data$crg1)="Jus_margendelaley"
names(data)
data$Jus_margendelaley=data$crg1
table(data$Jus_margendelaley)
table(data$protesta)
library(rio)
data=import("PER_2023_LAPOP.sav")
names(data)
str(data)
data$protesta=data$prot3
data$manifestaciones_ley=as.numeric(data$manifestaciones_ley)
table(data$protesta)
data %>%                      ## Paso 1: DATA
count(protesta=protesta, name = "Frecuencia") ## Paso 2: Pido una tabla de frecuencia de la variable continent
library(dplyr)
data %>%                      ## Paso 1: DATA
count(protesta=protesta, name = "Frecuencia") ## Paso 2: Pido una tabla de frecuencia de la variable continent
data %>%                      ## Paso 1: DATA
count(protesta=protesta, name = "Frecuencia") %>%   ## Paso 2: Pido una tabla de frecuencia de la variable continent
mutate(Porcentaje=Frecuencia/sum(Frecuencia)*100)  ## Paso 3: Creo una columna de %. Hasta aquí ya tienen una tabla simple.
data %>%                      ## Paso 1: DATA
summarize(Mediana=median(manifestaciones_ley))  ## Paso 2: Resumir
library(rio)
data=import("PER_2023_LAPOP.sav")
names(data)
str(data)
data$protesta=data$prot3
data$manifestaciones_ley=as.numeric(data$manifestaciones_ley)
data %>%                      ## Paso 1: DATA
summarize(Mediana=median(manifestaciones_ley))  ## Paso 2: Resumir
data$manifestaciones_ley=as.numeric(data$e5)
data %>%                      ## Paso 1: DATA
summarize(Mediana=median(manifestaciones_ley))  ## Paso 2: Resumir
median(data$manifestaciones_ley,na.rm=T)
data %>%                      ## Paso 1: DATA
summarize(Mediana=median(manifestaciones_ley),na.rm=T)  ## Paso 2: Resumir
data %>%                      ## Paso 1: DATA
summarize(Mediana=median(manifestaciones_ley,na.rm=T))  ## Paso 2: Resumir
mean(data$manifestaciones_ley,na.rm=T)
data %>%                      ## Paso 1: DATA
summarize(Promedio=mean(manifestaciones_ley))  ## Paso 2: Resumir
data %>%                      ## Paso 1: DATA
summarize(Promedio=mean(manifestaciones_ley),Mediana=median(manifestaciones_ley))  ## Paso 2: Resumir
data %>%                      ## Paso 1: DATA
summarize(Promedio=mean(manifestaciones_ley,na.rm=T))  ## Paso 2: Resumir
data %>%                      ## Paso 1: DATA
summarize(Promedio=mean(manifestaciones_ley,na.rm=T),Mediana=median(manifestaciones_ley,na.rm=T))  ## Paso 2: Resumir
data %>%                      ## Paso 1: DATA
summarize(Promedio=mean(manifestaciones_ley,na.rm=T),Mediana=median(manifestaciones_ley,na.rm=T)) %>%   ## Paso 2: Resumir
kable() %>%  # Paso 3: Convierte la tabla en código HTML
kable_styling()# Paso 4: Se visualiza mejor la tabla.Esto te servirá cuando utilices Rmd dado que este crear un archivo HTML.
library(kableExtra)
data %>%                      ## Paso 1: DATA
summarize(Promedio=mean(manifestaciones_ley,na.rm=T),Mediana=median(manifestaciones_ley,na.rm=T)) %>%   ## Paso 2: Resumir
kable() %>%  # Paso 3: Convierte la tabla en código HTML
kable_styling()# Paso 4: Se visualiza mejor la tabla.Esto te servirá cuando utilices Rmd dado que este crear un archivo HTML.
data %>%                      ## Paso 1: DATA
group_by(protesta) %>%
summarize(Promedio=mean(manifestaciones_ley,na.rm=T),Mediana=median(manifestaciones_ley,na.rm=T))
data$protesta=as.factor(data$protesta)
data$protesta=factor(data$protesta,levels = levels(data$protesta,levels),
labels = c("Sí ha participado","No ha participado"),
ordered = F)
library(rio)
data=import("PER_2023_LAPOP.sav")
names(data)
str(data)
data$protesta=data$prot3
data$manifestaciones_ley=as.numeric(data$e5)
data$protesta=as.factor(data$protesta)
data$protesta=factor(data$protesta,levels = levels(data$protesta,levels),
labels = c("Sí ha participado","No ha participado"),
ordered = F)
data$protesta=as.factor(data$protesta)
data$protesta=factor(data$protesta,levels = levels(data$protesta),
labels = c("Sí ha participado","No ha participado"),
ordered = F)
data %>%                      ## Paso 1: DATA
group_by(protesta) %>%
summarize(Promedio=mean(manifestaciones_ley,na.rm=T),Mediana=median(manifestaciones_ley,na.rm=T))
ggplot(data, aes(x=manifestaciones_ley)) + geom_histogram()
library(ggplot2)
ggplot(data, aes(x=manifestaciones_ley)) + geom_histogram()
ggplot(datos, aes(x = manifestaciones_ley, fill = protesta)) +
geom_histogram(alpha = 0.6, position = "identity", bins = 20) +
labs(title = "Histograma por Grupo", x = "Valor", y = "Frecuencia") +
theme_minimal() +
scale_fill_manual(values = c("blue", "red"))
ggplot(datos, aes(x = manifestaciones_ley, fill = protesta)) +
geom_histogram(alpha = 0.6, position = "identity", bins = 20) +
labs(title = "Histograma por Grupo", x = "Valor", y = "Frecuencia") +
theme_minimal() +
scale_fill_manual(values = c("blue", "red"))
ggplot(data, aes(x = manifestaciones_ley, fill = protesta)) +
geom_histogram(alpha = 0.6, position = "identity", bins = 20) +
labs(title = "Histograma por Grupo", x = "Valor", y = "Frecuencia") +
theme_minimal() +
scale_fill_manual(values = c("blue", "red"))
ggplot(data, aes(x = manifestaciones_ley, fill = protesta)) +
geom_histogram(alpha = 0.6, position = "dodge", bins = 20) +
labs(title = "Histograma por Grupo", x = "Valor", y = "Frecuencia") +
theme_minimal() +
scale_fill_manual(values = c("blue", "red"))
ggplot(data = data, aes(x = protesta)) +
geom_bar(fill = 'red')
tabla <- data%>%
count(protesta)%>%
mutate(Porcentaje=round(n/sum(n)*100,1))
# Crear gráfico de barras con ggplot2
ggplot(tabla, aes(x = protesta, y = Porcentaje, fill = protesta)) +
geom_bar(stat = "identity") +
labs(title = "Distribución por Porcentaje", x = "Grupo", y = "Porcentaje") +
theme_minimal() +
scale_fill_manual(values = c("blue", "red", "green")) +
geom_text(aes(label = sprintf("%.1f%%", Porcentaje)), vjust = -0.5)
tabla_sin_na <- subset(tabla, !is.na(protesta))
ggplot(tabla, aes(x = protesta, y = Porcentaje, fill = protesta)) +
geom_bar(stat = "identity") +
labs(title = "Distribución por Porcentaje", x = "Grupo", y = "Porcentaje") +
theme_minimal() +
scale_fill_manual(values = c("blue", "red")) +
geom_text(aes(label = sprintf("%.1f%%", Porcentaje)), vjust = -0.5)
tabla_sin_na <- subset(tabla, !is.na(protesta))
ggplot(tabla_sin_na, aes(x = protesta, y = Porcentaje, fill = protesta)) +
geom_bar(stat = "identity") +
labs(title = "Distribución por Porcentaje", x = "Grupo", y = "Porcentaje") +
theme_minimal() +
scale_fill_manual(values = c("blue", "red")) +
geom_text(aes(label = sprintf("%.1f%%", Porcentaje)), vjust = -0.5)
head(str(data))
ggplot(tabla_sin_na, aes(x = "", y = Porcentaje, fill = protesta)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +  # Convierte a gráfico circular
theme_void() +  # Elimina fondo y ejes
labs(title = "Gráfico de Pastel en R") +
scale_fill_manual(values = c("blue", "red", "green", "orange")) +
geom_text(aes(label = paste0(porcentaje, "%")),
position = position_stack(vjust = 0.5))
ggplot(tabla_sin_na, aes(x = "", y = Porcentaje, fill = protesta)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +  # Convierte a gráfico circular
theme_void() +  # Elimina fondo y ejes
labs(title = "Gráfico de Pastel en R") +
scale_fill_manual(values = c("blue", "red")) +
geom_text(aes(label = paste0(porcentaje, "%")),
position = position_stack(vjust = 0.5))
ggplot(tabla_sin_na, aes(x = "", y = Porcentaje, fill = protesta)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +  # Convierte a gráfico circular
theme_void() +  # Elimina fondo y ejes
labs(title = "Gráfico de Pastel en R") +
scale_fill_manual(values = c("blue", "red")) +
geom_text(aes(label = paste0(porcentaje, "%")),
position = position_stack(vjust = 0.5))
ggplot(tabla_sin_na, aes(x = "", y = Porcentaje, fill = protesta)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +  # Convierte a gráfico circular
theme_void() +  # Elimina fondo y ejes
labs(title = "Gráfico de Pastel en R") +
scale_fill_manual(values = c("blue", "red"))
ggplot(tabla_sin_na, aes(x = "", y = Porcentaje, fill = protesta)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +  # Convierte a gráfico circular
theme_void() +  # Elimina fondo y ejes
labs(title = "Gráfico de Pastel en R") +
scale_fill_manual(values = c("blue", "red")) +
geom_text(aes(label = porcentaje,
position = position_stack(vjust = 0.5))
ggplot(tabla_sin_na, aes(x = "", y = Porcentaje, fill = protesta)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +  # Convierte a gráfico circular
theme_void() +  # Elimina fondo y ejes
labs(title = "Gráfico de Pastel en R") +
scale_fill_manual(values = c("blue", "red"))
setwd("/Volumes/Macintosh HD - Datos/12 PUCP-Docencia/2025/Estadística 1/Estadistica1CienciaPolitica")
library(rio)
data=import("PER_2023_LAPOP.sav")
library(rio)
data=import("PER_2023_LAPOP.sav")
